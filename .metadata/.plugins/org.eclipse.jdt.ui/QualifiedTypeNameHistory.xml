<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer"/>
    <fullyQualifiedTypeName name="javax.websocket.server.ServerEndpoint"/>
    <fullyQualifiedTypeName name="store.items.ProductItems"/>
    <fullyQualifiedTypeName name="store.service.Service"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="store.repository.Repository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient.Builder"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="store.model.ProductList"/>
    <fullyQualifiedTypeName name="java.awt.PageAttributes.MediaType"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="store.model.ProductItems"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
</qualifiedTypeNameHistroy>
